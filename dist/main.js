(()=>{var e={29:e=>{"use strict";e.exports=require("unzipper")},317:e=>{"use strict";e.exports=require("child_process")},482:e=>{"use strict";e.exports=require("electron")},896:e=>{"use strict";e.exports=require("fs")},928:e=>{"use strict";e.exports=require("path")}},n={};function o(t){var s=n[t];if(void 0!==s)return s.exports;var r=n[t]={exports:{}};return e[t](r,r.exports,o),r.exports}const{app:t,BrowserWindow:s,Menu:r,ipcMain:c,dialog:i}=o(482),{execSync:a}=o(317),l=o(928),d=o(29),h=o(896),p=l.join(t.getPath("userData"),"config.json"),u=function(){try{if(h.existsSync(p))return JSON.parse(h.readFileSync(p,"utf8"))}catch(e){console.error("Failed to load config:",e)}return{}}();console.log(p,u);let f=!0===u.optionOsHdc?y():b();console.log("hdcPath:",f);const g="com.sohu.sohuvideoharmony";function w(){const e=new s({width:800,height:600,icon:l.join(process.resourcesPath,"./public/logo.ico"),webPreferences:{backgroundThrottling:!1,webviewTag:!0,webSecurity:!1,preload:l.join(__dirname,"preload.js"),nodeIntegration:!0}});r.setApplicationMenu(null),console.log("__dirname: ",__dirname),e.loadFile(l.join(__dirname,"./index.html")),e.on("ready-to-show",(()=>{e.show(),e.focus()})),e.on("closed",(()=>{})),e.webContents.on("did-finish-load",(()=>{e.webContents.send("load-config",u)})),c.handle("save-config",(async(e,n)=>{try{h.writeFileSync(p,JSON.stringify(n,null,2)),f=!0===n.optionOsHdc?y():b()}catch(e){console.error("Failed to save config:",e)}})),c.handle("dialog:openFile",(async()=>{const{canceled:n,filePaths:o}=await i.showOpenDialog(e,{properties:["openFile"],filters:[{name:"HarmonyPackage",extensions:["app","hap"]}]});if(!n)return o[0]})),c.handle("check-hdc",(async()=>{try{e.webContents.send("hdc-status","正在检查 hdc 环境变量...");const n=a(`${f} -v`);console.log(n.toString()),console.log("hdc is ok"),e.webContents.send("hdc-status","hdc is ok")}catch(n){console.error(`命令执行错误: ${n}`),e.webContents.send("hdc-status","error: 检查 hdc 环境变量.")}})),c.handle("install-app",(async(n,o,t)=>{try{e.webContents.send("hdc-status","开始安装应用..."),function(e){console.log("stop app."),a(`${f} shell aa force-stop ${g}`),e&&(console.log("uninstall..."),a(`${f} uninstall ${g}`))}(t);const n=l.dirname(o);if(o.endsWith(".app")){const t=l.basename(o,".app"),s=l.join(n,`${t}.zip`);h.renameSync(o,s),h.createReadStream(s).pipe(d.Extract({path:n})).on("close",(()=>{console.log("解压完成！"),h.renameSync(s,o);const n=o.replace(".app","");m(e,n)})).on("error",(n=>{console.error("解压过程中发生错误:",n),h.renameSync(s,o),e.webContents.send("hdc-status",`error: 解压过程中发生错误: ${n}`)}))}else if(o.endsWith(".hap")){const t=`${n}/tmp_${l.basename(o,".hap")}`;console.log("tmpDirPath:",t);const s=l.join(t,l.basename(o));h.mkdirSync(t),h.cpSync(o,s),m(e,t)}}catch(n){console.error(`命令执行错误: ${n}`),e.webContents.send("hdc-status",`error: 安装失败，${n}`)}})),c.handle("hdc-snapshot",(async()=>{try{const e=a(`${f} shell snapshot_display`).toString();console.log(e);const n=/success:\s+.+?write to\s+([^\s]+)/,o=e.match(n);if(o&&o[1]){const e=o[1],n=t.getPath("desktop");a(`${f} file recv ${e} ${n}`)}}catch(n){console.error(`命令执行错误: ${n}`),e.webContents.send("hdc-status","error: 检查 hdc 环境变量.")}}))}function m(e,n){console.log("send file.");const o=l.basename(n);e.webContents.send("hdc-status","send file.");const t=a(`${f} file send ${n} data/local/tmp/`);if(console.log(t.toString()),t.toString().indexOf("Fail")>-1)return void e.webContents.send("hdc-status","error: send file error.");console.log("install ..."),e.webContents.send("hdc-status","install ...");const s=a(`${f} shell bm install -r -p data/local/tmp/${o}`);console.log(s.toString()),s.toString().indexOf("Fail")>-1?e.webContents.send("hdc-status","error: send file error."):(a(`${f} shell aa start -a AppAbility -b ${g} -m app`),a(`${f} shell rm -rf data/local/tmp/${o}`),n&&h.existsSync(n)&&h.rm(n,{recursive:!0},((e,n)=>{})),console.log("app install finished."),e.webContents.send("hdc-status","app install finished."))}function y(){let e="";try{if("win32"===process.platform){const n=a("where hdc",{stdio:"pipe"}).toString().trim();n&&h.existsSync(n)&&(e=n)}else e=a("which hdc",{stdio:"pipe"}).toString().trim()}catch(n){e=""}return e}function b(){let e;e=l.join(process.resourcesPath,"hdc");const n=process.platform;if("win32"===n)return l.join(e,"win","hdc.exe");if("darwin"===n)return"arm64"===process.arch?l.join(e,"mac/arm64","hdc"):l.join(e,"mac/x64","hdc");throw new Error(`不支持的平台: ${n}`)}t.allowRendererProcessReuse=!0,t.whenReady().then((()=>{console.log("whenready"),w()})),t.on("window-all-closed",(function(){console.log("window-all-closed"),"darwin"!==process.platform&&t.quit()})),t.on("activate",(function(){0===s.getAllWindows().length&&w()}))})();